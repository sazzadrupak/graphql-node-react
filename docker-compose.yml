services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  sqitch:
    build:
      context: ./sqitch-db
      dockerfile: Dockerfile
    container_name: sqitch
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./sqitch-db:/usr/src/app
    environment:
      - SQITCH_PASSWORD=${POSTGRES_PASSWORD}
    entrypoint: >
      bash -c "sleep 5 &&
      sqitch deploy db:pg://postgres:ruhan@postgres:5432/issue_tracker &&
      sqitch verify db:pg://postgres:ruhan@postgres:5432/issue_tracker"

  backend:
    build:
      context: ./graphql-server
      dockerfile: Dockerfile
    container_name: backend
    expose:
      - 3000
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - NODE_ENV=development
    volumes:
      - ./graphql-server:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  pgdata: